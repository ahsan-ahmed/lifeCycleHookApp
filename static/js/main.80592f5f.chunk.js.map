{"version":3,"sources":["Components/Kid/index.js","Components/Teacher/index.js","Components/Judge/index.js","App.js","serviceWorker.js","index.js"],"names":["Kid","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","volume","emotion","danceSteps","currentStepIndex","startedPerforming","setState","console","log","kidUnmount","prevProps","prevState","_this2","stopStars","stars","qualified","_this3","dressColor","_this$state","react_default","a","createElement","style","backgroundColor","width","height","marginTop","onClick","pushDanceSteps","changeVolume","toConsumableArray","concat","applaudStatus","React","Component","defaultProps","applaud","furtherSteps","Teacher","sendDataToKid","getNextSteps","Judge","available","takeStars","type","bind","provideStars","App","kidMounted","nextSteps","arr","danceStep","applaudFunc","takeStarFunc","val","star","kidUnmountFunc","kidUnmountBool","onChangeKidMounted","kidCmp","Kid_Kid","Judge_Judge","className","Teacher_Teacher","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.80592f5f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class Kid extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      volume: null,\r\n      emotion: \"nervous\",\r\n      danceSteps: [],\r\n      currentStepIndex: 0,\r\n      startedPerforming: true\r\n    };\r\n  }\r\n  qualified() {\r\n    this.setState(state => ({ startedPerforming: !state.startedPerforming }));\r\n    console.log(\"this.state.startedPerforming\", this.state.startedPerforming);\r\n    this.props.kidUnmount(true);\r\n  }\r\n  static getDerivedStateFromProps(props, state) {\r\n    console.log(\"kidProps\", props);\r\n    const { pushDanceSteps } = props;\r\n    console.log(\"props.stopStars\", props.stopStars);\r\n    return {\r\n      volume: props.changeVolume,\r\n      danceSteps: [...state.danceSteps.concat(pushDanceSteps)],\r\n      emotion: props.applaudStatus || state.emotion,\r\n      stars: props.stopStars\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.setState(() => ({ danceSteps: [\"step1\", \"step2\"] }));\r\n    console.log(\"32\");\r\n  }\r\n  componentWillUnmount() {\r\n    console.log(\"componentWillUnmount------>>>\");\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(\"prevProps,prevState\", prevProps, prevState);\r\n    if (prevProps.stopStars !== this.state.stars) {\r\n      this.qualified();\r\n      this.setState({ stars: 0 }, () => console.log(this.state.stars));\r\n    }\r\n  }\r\n  render() {\r\n    console.log(\"this.state.stars\", this.state.stars);\r\n    const { dressColor } = this.props;\r\n    //const { volume } = this.state;\r\n    const {\r\n      danceSteps,\r\n      emotion,\r\n      startedPerforming,\r\n      currentStepIndex\r\n    } = this.state;\r\n    //  console.log(volume, danceSteps, this.state);\r\n    return (\r\n      <div>\r\n        <div>dressColor: {dressColor}</div>\r\n        <div style={{ backgroundColor: dressColor, width: 50, height: 50 }} />\r\n        <div>Emotion: {emotion}</div>\r\n        {startedPerforming && (\r\n          <div>\r\n            <div>Current Step: {danceSteps[currentStepIndex]}</div>\r\n            <button\r\n              style={{ height: 40, marginTop: 20 }}\r\n              onClick={() =>\r\n                this.setState({ currentStepIndex: currentStepIndex + 1 })\r\n              }\r\n            >\r\n              Perform Next Step\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nKid.defaultProps = { dressColor: \"red\", applaud: false, furtherSteps: [] };\r\n","import React from \"react\";\r\nexport default class Teacher extends React.Component {\r\n  sendDataToKid = () => {\r\n    const furtherSteps = [\"step3\", \"step4\", \"step5\"];\r\n    this.props.getNextSteps(furtherSteps);\r\n  };\r\n  render() {\r\n    return (\r\n      <button\r\n        style={{ height: 40, marginTop: 20 }}\r\n        onClick={this.sendDataToKid}\r\n      >\r\n        Get Help From Teacher\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nexport default class Judge extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { stars: 0, available: false };\r\n  }\r\n  applaud() {\r\n    this.props.applaudStatus();\r\n  }\r\n  provideStars() {\r\n    const { stars } = this.state;\r\n    this.setState({ stars: stars + 1 });\r\n    if (stars === 5) {\r\n      this.props.takeStars(stars);\r\n    }\r\n  }\r\n  shouldComponentUpdate() {\r\n    return this.state.stars < 5;\r\n  }\r\n  render() {\r\n    const { stars, available } = this.state;\r\n    return (\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          style={{ height: 40, marginTop: 20 }}\r\n          onClick={this.applaud.bind(this)}\r\n        >\r\n          Appreciate performance\r\n        </button>\r\n        <button\r\n          style={{ height: 40, marginTop: 20 }}\r\n          type=\"button\"\r\n          onClick={this.provideStars.bind(this)}\r\n        >\r\n          Provide stars\r\n        </button>\r\n        Kid is available: {available}\r\n        Stars gained: {stars}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\n//import \"./App.css\";\nimport Kid from \"./Components/Kid/\";\nimport Teacher from \"./Components/Teacher/\";\nimport Judge from \"./Components/Judge/\";\n\nclass App extends Component {\n  state = {\n    volume: 5,\n    kidMounted: true\n  };\n  nextSteps = arr => {\n    console.log(\"mill rha he \", arr);\n    this.setState({ danceStep: arr });\n  };\n  applaudFunc = () => {\n    this.setState({ emotion: \"happy\" });\n  };\n  takeStarFunc = val => {\n    this.setState({ star: val }, () => {\n      //console.log(this.state.star);\n    });\n  };\n  kidUnmountFunc = val => {\n    this.setState({ kidUnmountBool: val }, () => console.log(val));\n  };\n  onChangeKidMounted = () => {\n    this.setState(state => ({ kidMounted: !state.kidMounted }));\n  };\n  render() {\n    const { volume, danceStep, emotion, kidUnmountBool } = this.state;\n    let kidCmp = \"\";\n    if (this.state.kidMounted) {\n      kidCmp = (\n        <div>\n          <Kid\n            dressColor=\"yellow\"\n            changeVolume={volume}\n            pushDanceSteps={danceStep}\n            applaudStatus={emotion}\n            stopStars={this.state.star}\n            kidUnmount={this.kidUnmountFunc}\n          />\n          <Judge\n            applaudStatus={this.applaudFunc}\n            takeStars={this.takeStarFunc}\n          />\n        </div>\n      );\n    }\n    // const result= athleteData.filter(val=>val.income.toString().length>7).map(newObj =>`${newObj.athlete} is ${newObj.team} is ${newObj.income}`)\n    //console.log(result);\n    return (\n      <div className=\"App\">\n        <h1>helloworld</h1>\n        <Teacher getNextSteps={this.nextSteps} />\n        {kidCmp}\n        {<br />}\n        {kidUnmountBool && (\n          <button\n            style={{ height: 40, marginTop: 20 }}\n            onClick={this.onChangeKidMounted}\n          >\n            Ask the Kid to Leave the Show !!!\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}